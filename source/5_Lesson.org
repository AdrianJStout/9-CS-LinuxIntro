#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='http://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:nil creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: The art of redirection
#+AUTHOR: Stephen Brown

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stsb11/9-CS-LinuxIntro">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
      <li><a href="5_Lesson.html">Week5</a></li>
      <li><a href="assessment.html">Assessment</a></li>
    </ul>
  </div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Introduction
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Typing commands in the terminal leads to the result being shown on the terminal window. It doesn't have to be this way, though. We could redirect the output to somewhere else instead.
- In the 1970's, users may have wanted to output to a line printer instead.
- This doesn't tend to come up much in the 21st century, but you might want to put the output from the computer into a file, though.
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:
- Try this command:
#+begin_src
echo "This is some text"
#+end_src
- =echo= simply prints some text to the display.
- By itself, this isn't very useful. We can use this to create and add content to text files, though.
#+begin_src
echo "This is some text." > whatsit.txt
echo "This is a bit more text." > whatsit.txt
#+end_src
- If you look, you'll see you just created a new file.
- If you do =cat whatsit.txt= or =emacs whatsit.txt= or even nano =whatsit.txt= you'll see the contents of the file.
- The redirect symbol =>= tells Linux to put the result of whatever command comes before it into a new file. Unfortunately, this means over-writing the contents of the first =echo= command we did.
- Try this. *It's subtly different.*
#+begin_src
echo "This is some new text." > whatsit.txt
echo "This is a little bit more text." >> whatsit.txt
#+end_src
- This time, in the second line we used =>>= instead of =>=. This means to *append* (as in 'add to the end of') the file, rather than making a fresh one each time.
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- On a Linux machine, you can type =history= to see (up to) the last 500 commands you've entered. Try it now.
- It'd be nice to keep this to have a record of what you've done in the past. I've been using Linux for a while, and still look over my own history from time to time; it's handy to refer back to.
- *Task:* Redirect the contents of the history command into a file called =recentHistory.txt=
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- Your =recentHistory.txt= file probably has quite a lot in it.
- In Linux, files can get very big, very fast.
- To see the first 10 lines in any file, use the =head= program, like this:
   - =head recentHistory.txt=
- What do you suppose the =tail= program does when you give it a file?
- *Task:* Find out what =tail= does.

** Pipe It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:
- To be a proper Linux pro, you'll want to start using pipes.
- The basic idea is that you run a program, then pass the results to another program (and maybe another and another...)
- Being able to do this makes Linux incredibly powerful, especially if you're quite creative.
- Let's try an example: You're running out of space on your computer, and you want to know which files are taking up the most room so you can delete them.
- The =du= command tells you how much disk space every file and sub-directory is using from wherever you are on the computer.
- If you're in =/= (the root) when you start, you'll see the details for EVERY file on the computer.
- Give it a go, and use Ctrl-c to kill the program when you get bored.
- By itself, this gives an overwhelming amount of information, presented in ascending (smallest to largest) order.


- The =sort= command takes any file and sorts it into either asecending or descending order. By putting -nr on the end of the command, we ask the =sort= program to use numeric values (=n=) and reverse (=r=) the sort order. 
- In our quest to find the largest files on the system, at least they'll appear in the right order now, although there are likely to be millions of files.
- Try it: =du | sort -nr=
- This time, there will be a bit of a delay while the computer browses the files availble and sorts them, then your files will be output. 


- Finally, we can take this output and just ask to see the first 10 results by piping the output through =head=.
- Our command is now: =du | sort -nr | head=
** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- *Silver:* 
- *Gold:* 
- *Platinum:* 
