#+STARTUP:indent
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/styles.css"/>
#+HTML_HEAD_EXTRA: <link href='https://fonts.googleapis.com/css?family=Ubuntu+Mono|Ubuntu' rel='stylesheet' type='text/css'>
#+HTML_HEAD_EXTRA: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js" type="text/javascript"></script>
#+HTML_HEAD_EXTRA: <script src="js/navbar.js" type="text/javascript"></script>
#+OPTIONS: f:nil author:nil num:nil creator:nil timestamp:nil toc:nil html-style:nil

#+TITLE: Introduction to Linux
#+AUTHOR: Stephen Brown

#+BEGIN_HTML
  <div class="github-fork-ribbon-wrapper left">
    <div class="github-fork-ribbon">
      <a href="https://github.com/stsb11/9-CS-LinuxIntro">Fork me on GitHub</a>
    </div>
  </div>
<div id="stickyribbon">
    <ul>
      <li><a href="1_Lesson.html">Week1</a></li>
      <li><a href="2_Lesson.html">Week2</a></li>
      <li><a href="3_Lesson.html">Week3</a></li>
      <li><a href="4_Lesson.html">Week4</a></li>
      <li><a href="assessment.html">Assessment</a></li>
    </ul>
  </div>
#+END_HTML
* COMMENT Use as a template
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Learn It
:PROPERTIES:
:HTML_CONTAINER_CLASS: learn
:END:

** Research It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:

** Design It
:PROPERTIES:
:HTML_CONTAINER_CLASS: design
:END:

** Build It
:PROPERTIES:
:HTML_CONTAINER_CLASS: build
:END:

** Test It
:PROPERTIES:
:HTML_CONTAINER_CLASS: test
:END:

** Run It
:PROPERTIES:
:HTML_CONTAINER_CLASS: run
:END:

** Document It
:PROPERTIES:
:HTML_CONTAINER_CLASS: document
:END:

** Code It
:PROPERTIES:
:HTML_CONTAINER_CLASS: code
:END:

** Program It
:PROPERTIES:
:HTML_CONTAINER_CLASS: program
:END:

** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:

** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:

** Save It
:PROPERTIES:
:HTML_CONTAINER_CLASS: save
:END:

* Introduction
:PROPERTIES:
:HTML_CONTAINER_CLASS: activity
:END:
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: try
:END:
- To get the most out of Linux, you'll want to learn to use the command line to get things done. Linux is based around an operating system called UNIX that was first devised and written in 1969. Computers weren't really used with mice, touch screens or graphics back then. Many used printers to produce their output rather than a monitor. 
- Many of the commands you'll learn are unchanged since the original UNIX release. Depite these commands possibly being older than your parents, they are used daily on the vast majority of the World's most powerful computers. 
- In this lesson, we'll learn to navigate around your files and look at what's in them. 
- Open the Linux VM using the link on your desktop, and log in using your network username and password. 
- Once in, open a Terminal session. You'll have a window open that looks a little like this...
[[./img/term.png]]
- We'll start by moving into a new directory (or folder as you might say in Windows), downloading some files from the web and then navigating through them.
- One by one, copy and paste these lines into your terminal...
#+begin_src
cd ~/Documents
mkdir Linux_Work
cd Linux_Work
git clone https://github.com/stsb11/9-CS-LinuxIntro-files.git
cd 9-CS-LinuxIntro-files/treasure
#+end_src

- What we've just done is...
   - Change Directory into 'Documents'.
   - MaKe a new DIRectory called /LinuxWork/. 
   - Change Directory into /LinuxWork/.
   - Download some files from a website called 'GitHub.com'
   - Change Directory into the directory containing these files we just downloaded.
** Try It
:PROPERTIES:
:HTML_CONTAINER_CLASS: research
:END:
- We're going on a treasure hunt.
- In the treasure directory that you're currently in, there are more directories and some files within them. 
- Many of these files contain jokes. One of them contains a secret code that you can use to collect your silver badge for this lesson. 
- You'll need to learn to use three commands to complete this exercise.
#+begin_src
pwd
#+end_src
- Present Working Directory. Outputs the current directory you're in.
- If you've followed the above instructions and try this, you' should see that you're currently working in...
   - <SOMETHING>/9-CS-LinuxIntro-files/treasure_hunt


#+begin_src
cd NAME_OF_DIRECTORY
#+end_src
- Change Directory to somewhere else.
- You can get a more detailed list if you use =ls -l= instead. 
[[./img/ls-l.png]]
- In the shot above, you can see the time and date when each file was last modified to the left of each file name.
- Entries which are directories (like *pages* and *source*) have the letter 'd' on the far left-hand side of the column. Some Linux systems will also change the colour of the directory names for you, like in the image above. 
- The size of the file in bytes is shown to the left of the month the file was last modified.
- The username and group of the person who created the file is shown here too.


- At the moment, you should be able to see four directories, imaginatively called 'a', 'b', 'c' and 'd'. Let's Change Directory into a...
- Type: =cd a=
- Now let's LiSt the files in this directory. Type: =ls=
- There are three text files in here. We'll have a look inside them in a moment.
- For now though, we'll need to get back to the previous directory. This is done as follows:
- =cd ..=
- In Linux type Operating Systems, =..= means 'back one level'. You can use a few of them at a time to navigate around more quickly. E.g. =cd ../..= to drop back two directory levels, or =cd =../b= to drop back a level, then change into the =b= directory if you were already working inside =a=.
- *Task:* Use =pwd= to get your bearings, then navigate into the =a= directory once more. 

#+begin_src
cat FILENAME
#+end_src
- This command is actually short for conCATenate, which means to add one thing to the end of another. While it can do this, its more commonly used by Linux users to quickly see the contents of files.
- Assuming you're in the =a= directory, type =ls= to see whats in there.
[[./img/cat.png]]
- Let's see what's inside the 'otherfile.txt document. Type =cat ot= like in the screenshot above.
- Linux users don't like to type too much - hit the =tab= key to auto-complete, then hit enter.
- The contents of the file will now be displayed. 
** Badge It
:PROPERTIES:
:HTML_CONTAINER_CLASS: badge
:END:
- *Silver:* 
- *Gold:* Write a working two-player game of 21 in Scratch. Upload a screenshot of your code AND the *.sb2* file to the upload points. 
- *Platinum:* Implement a one-player version with a computer opponent. 
   - The computer should randomly choose to play either a 1, 2 or 3. 
   - If you can do this, see if you can implement a strategy that means the computer will always win when it goes first.
